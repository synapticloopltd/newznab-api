plugins {
	id 'java'
	id 'eclipse'
	id "maven"
	id "maven-publish"

	id "com.github.ben-manes.versions" version "0.13.0"
	id "com.github.johnrengelman.shadow" version "1.2.4"
	id "com.jfrog.bintray" version "1.7.3"

	id 'co.riiid.gradle' version '0.4.2'
	id 'net.saliman.cobertura' version '2.4.0'

	id 'synapticloop.copyrightr' version '1.1.2'
	id 'synapticloop.documentr' version '2.9.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// textual information for this project
group = 'synapticloopltd'
archivesBaseName = 'newznab-api'
description = """NewzNab API in java"""

version = '1.0.0'

// In this section you declare where to find the dependencies of your project
repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
	runtime 'org.apache.httpcomponents:httpclient:4.5.3'
	runtime 'commons-io:commons-io:2.5'
	runtime 'com.fasterxml.jackson.core:jackson-databind:2.8.5'
	runtime 'org.slf4j:slf4j-api:1.7.21'
	runtime 'org.json:json:20160810'

	compile 'org.apache.httpcomponents:httpclient:4.5.3'
	compile 'commons-io:commons-io:2.5'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.8.5'
	compile 'org.slf4j:slf4j-api:1.7.21'
	compile 'org.json:json:20160810'
	

	testRuntime 'junit:junit:4.12'
	testRuntime 'org.mockito:mockito-all:2.0.2-beta'
	testRuntime 'org.apache.logging.log4j:log4j-slf4j-impl:2.7'
	testRuntime 'org.apache.logging.log4j:log4j-core:2.7'
	testRuntime 'org.powermock:powermock:1.6.6'
	testRuntime 'org.powermock:powermock-api-mockito:1.6.6'
	testRuntime 'org.powermock:powermock-module-junit4:1.6.6'
	testRuntime 'cglib:cglib:3.2.4'

	testCompile 'junit:junit:4.12'
	testCompile 'org.mockito:mockito-all:2.0.2-beta'
	testCompile 'org.apache.logging.log4j:log4j-slf4j-impl:2.7'
	testCompile 'org.apache.logging.log4j:log4j-core:2.7'
	testCompile 'org.powermock:powermock:1.6.6'
	testCompile 'org.powermock:powermock-api-mockito:1.6.6'
	testCompile 'org.powermock:powermock-module-junit4:1.6.6'
	testCompile 'cglib:cglib:3.2.4'
}

configurations.all {
	resolutionStrategy {
		failOnVersionConflict()
		force 'xerces:xmlParserAPIs:2.6.2',
					'xerces:xercesImpl:2.6.2',
					'xml-apis:xml-apis:2.0.2',
					'org.hamcrest:hamcrest-core:1.3',
					'org.objenesis:objenesis:2.4',
					'com.fasterxml.jackson.core:jackson-annotations:2.8.5',
					'junit:junit:4.12'
	}
}

def javaApiUrl = 'http://docs.oracle.com/javase/1.7.0/docs/api/'
def groovyApiUrl = 'http://groovy.codehaus.org/gapi/'

tasks.withType(Javadoc) {
	options.links(javaApiUrl, groovyApiUrl)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

build.finalizedBy(project.tasks.shadowJar)
test.finalizedBy(project.tasks.cobertura)


publishing {
	publications {
		Synapticloop(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar

			groupId 'synapticloop'

			artifactId 'newznab-api'

			pom.withXml {
				configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each { dep ->
					asNode().dependencies[0].dependency.find {
						it.artifactId[0].text() == dep.moduleName &&
								it.groupId[0].text() == dep.moduleGroup
					}.scope[0].value = 'compile'
				}
			}
		}
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_PASSWORD')

	publications = [ 'Synapticloop' ]

	publish = true

	pkg {
		repo = 'maven'
		name = 'newznab-api'
	}

}

github {
	owner = 'synapticloopltd'
	repo = archivesBaseName
	if(System.getenv('GITHUB_TOKEN')) {
		token = System.getenv('GITHUB_TOKEN')
	}
	tagName = version
	name = version
	assets = [
		'build/libs/' + archivesBaseName + '-' + version + '.jar',
	]
}
